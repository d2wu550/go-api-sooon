// GENERATED BY THE COMMAND ABOVE; DO NOT EDIT
// This file was generated by swaggo/swag

package docs

import (
	"bytes"
	"encoding/json"
	"strings"

	"github.com/alecthomas/template"
	"github.com/swaggo/swag"
)

var doc = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{.Description}}",
        "title": "{{.Title}}",
        "contact": {
            "name": "sooon"
        },
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/init": {
            "post": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "App"
                ],
                "summary": "APP基本認證 初始化功能",
                "parameters": [
                    {
                        "type": "string",
                        "description": "sha256",
                        "name": "hash",
                        "in": "formData",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{\"s\":1}",
                        "schema": {
                            "$ref": "#/definitions/app.initSuccessResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/app.apiFailResponse"
                        }
                    }
                }
            }
        },
        "/login/email": {
            "post": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Login"
                ],
                "summary": "Login API",
                "parameters": [
                    {
                        "type": "string",
                        "description": "登入信箱 binding:Email",
                        "name": "email",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "登入密碼 binding:RawPWD",
                        "name": "p",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "用戶語系",
                        "name": "lang",
                        "in": "formData"
                    },
                    {
                        "type": "string",
                        "description": "用戶裝置",
                        "name": "client",
                        "in": "formData"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "登入成功",
                        "schema": {
                            "$ref": "#/definitions/member.loginSuccessResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/member.apiFailResponse"
                        }
                    }
                }
            }
        },
        "/member/{action}/{mid}": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Member"
                ],
                "summary": "Member detail API",
                "parameters": [
                    {
                        "type": "string",
                        "description": "profile|loginHistory",
                        "name": "action",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "用戶編號(1000000001)",
                        "name": "mid",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "JWT",
                        "name": "Authorization",
                        "in": "header"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "登入紀錄",
                        "schema": {
                            "$ref": "#/definitions/member.historySuccessResponse"
                        }
                    },
                    "201": {
                        "description": "個人檔案",
                        "schema": {
                            "$ref": "#/definitions/member.historySuccessResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/member.apiFailResponse"
                        }
                    }
                }
            }
        },
        "/playground": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Test"
                ],
                "summary": "Playground API",
                "responses": {
                    "200": {
                        "description": "{\"s\":1}"
                    }
                }
            }
        },
        "/signup": {
            "post": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Sign Up"
                ],
                "summary": "Signup API",
                "parameters": [
                    {
                        "type": "string",
                        "description": "註冊信箱 binding:RegEmail",
                        "name": "email",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "註冊密碼 binding:Pwd",
                        "name": "p",
                        "in": "formData",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "註冊成功",
                        "schema": {
                            "$ref": "#/definitions/member.signupSuccessResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/member.apiFailResponse"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "app.apiFailResponse": {
            "type": "object",
            "properties": {
                "errCode": {
                    "type": "string",
                    "example": "APP00_143"
                },
                "errMsg": {
                    "type": "string",
                    "example": "unauthorized"
                },
                "s": {
                    "type": "integer",
                    "example": -9
                }
            }
        },
        "app.initSuccessResponse": {
            "type": "object",
            "properties": {
                "s": {
                    "type": "integer",
                    "example": 1
                }
            }
        },
        "member.apiFailResponse": {
            "type": "object",
            "properties": {
                "errCode": {
                    "type": "string",
                    "example": "APP00_143"
                },
                "errMsg": {
                    "type": "string",
                    "example": "No such account exists"
                },
                "s": {
                    "type": "integer",
                    "example": -9
                }
            }
        },
        "member.historyLog": {
            "type": "object",
            "properties": {
                "createDt": {
                    "type": "string",
                    "example": "2021-03-02 10:07:34"
                },
                "device": {
                    "type": "string",
                    "example": "A"
                },
                "ip": {
                    "type": "string",
                    "example": "::1"
                },
                "loginTs": {
                    "type": "integer",
                    "example": 1614650853
                },
                "memberID": {
                    "type": "integer",
                    "example": 1000000001
                }
            }
        },
        "member.historySuccessResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/member.historyLog"
                    }
                },
                "s": {
                    "type": "integer",
                    "example": 1
                }
            }
        },
        "member.loginMsg": {
            "type": "object",
            "properties": {
                "memberID": {
                    "type": "integer",
                    "example": 1000000001
                },
                "msg": {
                    "type": "string",
                    "example": "登入成功"
                },
                "token": {
                    "type": "string",
                    "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJFbWFpbCI6ImQyd3UxODdAZ21haWwuY29tIiwiUm9sZSI6Im1lbWJlciIsIk1lbWJlcklEIjoxMDAwMDAwMDM0LCJMYW5nIjoiIiwiYXVkIjoiZDJ3dTE4N0BnbWFpbC5jb20iLCJleHAiOjE2MTQ2NjA0MzIsImp0aSI6ImQyd3UxODdAZ21haWwuY29tMTYxNDY1NjgzMiIsImlhdCI6MTYxNDY1NjgzMiwiaXNzIjoibG9naW4iLCJuYmYiOjE2MTQ2NTY4MzMsInN1YiI6ImQyd3UxODdAZ21haWwuY29tIn0.9jUJBPCZgMr4AIWv_JfwVSN9gMVeLbxI8Ck5HrGcknk"
                }
            }
        },
        "member.loginSuccessResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "$ref": "#/definitions/member.loginMsg"
                },
                "s": {
                    "type": "integer",
                    "example": 1
                }
            }
        },
        "member.signupMsg": {
            "type": "object",
            "properties": {
                "memberID": {
                    "type": "integer",
                    "example": 1000000001
                },
                "msg": {
                    "type": "string",
                    "example": "註冊成功"
                }
            }
        },
        "member.signupSuccessResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "$ref": "#/definitions/member.signupMsg"
                },
                "s": {
                    "type": "integer",
                    "example": 1
                }
            }
        }
    }
}`

type swaggerInfo struct {
	Version     string
	Host        string
	BasePath    string
	Schemes     []string
	Title       string
	Description string
}

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = swaggerInfo{
	Version:     "1.0",
	Host:        "127.0.0.1:3000",
	BasePath:    "/dev",
	Schemes:     []string{"http"},
	Title:       "sooon api",
	Description: "sooon api doc",
}

type s struct{}

func (s *s) ReadDoc() string {
	sInfo := SwaggerInfo
	sInfo.Description = strings.Replace(sInfo.Description, "\n", "\\n", -1)

	t, err := template.New("swagger_info").Funcs(template.FuncMap{
		"marshal": func(v interface{}) string {
			a, _ := json.Marshal(v)
			return string(a)
		},
	}).Parse(doc)
	if err != nil {
		return doc
	}

	var tpl bytes.Buffer
	if err := t.Execute(&tpl, sInfo); err != nil {
		return doc
	}

	return tpl.String()
}

func init() {
	swag.Register(swag.Name, &s{})
}
